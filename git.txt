本地开发分支与远程开发分支关联
git checkout -b dev origin/dev

如有报错则：
fatal: 'origin/dev' is not a commit and a branch 'dev' cannot be created from it

推送分支
git push origin master
拉取数据
git pull
再重新关联

a 开发分支推送到远程开发分支
b 开发分支推送到远程开发分支冲突

b 推送失败
git pull  拉取最新代码
git pull 失败
没有指定本地dev分支与远程origin/dev分支的链接
git branch --set-upstream-to=origin/dev dev
再 git pull
解决冲突，提交，再push



1.首先，可以试图用git push origin <branch-name> 推送自己的修改；
2.如果推送失败，则因为远程分支比你的更新，需要先用git pull试图合并；
3.如果合并有冲突，则解决冲突，并在本地提交；
4.没有冲突或者解决掉冲突后，再用git push origin <branch-name>推送就能成功！

如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream-to <branch-name> origin/<branch-name>。


小结
git push origin <branch-name> 如果推送失败，先用 git pull 抓取远程的新提交
在本地创建和远程分支对应的分支，使用 git checkout -b branch-name origin/branch-name, 本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联，使用 git branch --set-upstream branch-name origin/branch-name
从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。


